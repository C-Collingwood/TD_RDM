function [LL] = hardwickLL(Q,H,par,rt_in,chose,nlr)
%%% Calculates the likelihood of a given RT and choice for a piecewise linear
%%% accumulator model
%%% Flag determines whether a constant or changing drift rate is used. 
%%% Flag = 1 : Constant drift of Q+H
%%% Flag = 2: Drift change from H to Q+H at t_q.


%%%%%%%%%%%
bq= par(2);
bh = par(4);
theta = par(8);
s = par(7);
pdf_bin = 0.05;
t_q = par(6); % Fixed parameter 
t_h = par(5);
rt = rt_in - t_h;
%rt = round(rt,2);
% if t_q==0
% t_0 = 0;%t_h;
% else
t_0 = t_q-t_h;
%t_0 = round(t_0,2);
%end
%v1=repmat(bh*H,1,max_rt);
%v2=repmat(bh*H+bq*Q,1,max_rt);
mu0=zeros(size((Q)));
mu1 = bh*H;
mu2 = bq*Q+bh*H;
% 
if isnan(chose)
    mu0(end+1)=0;
    mu1(end+1)=0;
    mu2(end+1)=0;
    chose = 5;
end
% if nlr==1
%     mu1 = mu2; %set equal drift rates.
% end
mu0(mu0==0)=0.00001;
mu1(mu1==0)=0.00001;
mu2(mu2==0)=0.00001;
switch nlr
    case 1
        iv = theta./mu2;
        is = (theta/s).^2;
        if rt>0
            PDF_out = pdf_ig(rt,iv(chose),is);
            CDF_out = cdf_ig(rt,iv,is);
        else
            PDF_out = nan; %%% Should this be 0?
            CDF_out = zeros(1,length(iv));
        end
        % if any(isnan(CDF_out))  %%% Should this be 0?
        %         CDF_out(isnan(CDF_out))=0;
        % end
       
    case 2
        iv = theta./mu1;
        is = (theta/s).^2;
        if rt<=0
            PDF_out = nan; %%% Should this be 0?
            CDF_out = zeros(1,length(iv));
        elseif rt<=t_0
            PDF_out = pdf_ig(rt,iv(chose),is);
            CDF_out = cdf_ig(rt,iv,is);
            if any(isnan(CDF_out))
                CDF_out(isnan(CDF_out))=0;
            end
        elseif rt>t_0
            for c = 1:length(Q)
                CDF_out(c) = twodriftc(rt,t_0,mu1(c),mu2(c),s,theta);
            end
            cdf_up = twodriftc(rt+pdf_bin,t_0,mu1(chose),mu2(chose),s,theta);
            if rt - pdf_bin <=0
                cdf_down = nan; %%% Should this be 0?
            elseif rt-pdf_bin <=t_0
                cdf_down = cdf_ig(rt-pdf_bin,iv(chose),is);
                % if isnan(cdf_down)  %%% Should this be 0?
                %     cdf_down = 0;
                % end
            else
                cdf_down = twodriftc(rt-pdf_bin,t_0,mu1(chose),mu2(chose),s,theta); 
             end
            PDF_out =  (cdf_up-cdf_down)./(2*pdf_bin);
        end
end

idx = 1:length(Q);
if chose~=5
idx(chose)=[];
end

if PDF_out <=0
    PDF_out = 0.00000000000001;
end
CDF_out(CDF_out>0.9999)=0.9999;

PDF_out = PDF_out;

if length(par) == 11 %%% if we are including contaminants
    p0=par(9);
    uf = (par(11)+par(10))./2;
    fd = PDF_out*prod(1-CDF_out(idx));
    LL = log((1-p0).*fd + p0.*uf);
else 
    LL = log(PDF_out*prod(1-CDF_out(idx)));
end




end